{"dependencies":[{"name":"./_Symbol.js","loc":{"line":1,"column":19}},{"name":"./_getRawTag.js","loc":{"line":2,"column":22}},{"name":"./_objectToString.js","loc":{"line":3,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol = require(\"./_Symbol.js\");\n\nvar _Symbol2 = _interopRequireDefault(_Symbol);\n\nvar _getRawTag = require(\"./_getRawTag.js\");\n\nvar _getRawTag2 = _interopRequireDefault(_getRawTag);\n\nvar _objectToString = require(\"./_objectToString.js\");\n\nvar _objectToString2 = _interopRequireDefault(_objectToString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol2.default ? _Symbol2.default.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? (0, _getRawTag2.default)(value) : (0, _objectToString2.default)(value);\n}\n\nexports.default = baseGetTag;"},"hash":"a741e22ed8b021e903813deec1e645be"}