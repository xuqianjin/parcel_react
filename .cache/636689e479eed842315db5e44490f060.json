{"dependencies":[{"name":"react","loc":{"line":7,"column":21}},{"name":"prop-types","loc":{"line":11,"column":25}},{"name":"react-pure-render/function","loc":{"line":15,"column":24}},{"name":"redux-devtools","loc":{"line":19,"column":29}},{"name":"./LogMonitorButton","loc":{"line":21,"column":32}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _function = require('react-pure-render/function');\n\nvar _function2 = _interopRequireDefault(_function);\n\nvar _reduxDevtools = require('redux-devtools');\n\nvar _LogMonitorButton = require('./LogMonitorButton');\n\nvar _LogMonitorButton2 = _interopRequireDefault(_LogMonitorButton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar reset = _reduxDevtools.ActionCreators.reset;\nvar rollback = _reduxDevtools.ActionCreators.rollback;\nvar commit = _reduxDevtools.ActionCreators.commit;\nvar sweep = _reduxDevtools.ActionCreators.sweep;\n\n\nvar style = {\n  textAlign: 'center',\n  borderBottomWidth: 1,\n  borderBottomStyle: 'solid',\n  borderColor: 'transparent',\n  zIndex: 1,\n  display: 'flex',\n  flexDirection: 'row'\n};\n\nvar LogMonitorButtonBar = function (_Component) {\n  _inherits(LogMonitorButtonBar, _Component);\n\n  function LogMonitorButtonBar(props) {\n    _classCallCheck(this, LogMonitorButtonBar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.shouldComponentUpdate = _function2.default;\n\n    _this.handleReset = _this.handleReset.bind(_this);\n    _this.handleRollback = _this.handleRollback.bind(_this);\n    _this.handleSweep = _this.handleSweep.bind(_this);\n    _this.handleCommit = _this.handleCommit.bind(_this);\n    return _this;\n  }\n\n  LogMonitorButtonBar.prototype.handleRollback = function handleRollback() {\n    this.props.dispatch(rollback());\n  };\n\n  LogMonitorButtonBar.prototype.handleSweep = function handleSweep() {\n    this.props.dispatch(sweep());\n  };\n\n  LogMonitorButtonBar.prototype.handleCommit = function handleCommit() {\n    this.props.dispatch(commit());\n  };\n\n  LogMonitorButtonBar.prototype.handleReset = function handleReset() {\n    this.props.dispatch(reset());\n  };\n\n  LogMonitorButtonBar.prototype.render = function render() {\n    var _props = this.props;\n    var theme = _props.theme;\n    var hasStates = _props.hasStates;\n    var hasSkippedActions = _props.hasSkippedActions;\n\n    return _react2.default.createElement(\n      'div',\n      { style: _extends({}, style, { borderColor: theme.base02 }) },\n      _react2.default.createElement(\n        _LogMonitorButton2.default,\n        {\n          theme: theme,\n          onClick: this.handleReset,\n          enabled: true },\n        'Reset'\n      ),\n      _react2.default.createElement(\n        _LogMonitorButton2.default,\n        {\n          theme: theme,\n          onClick: this.handleRollback,\n          enabled: hasStates },\n        'Revert'\n      ),\n      _react2.default.createElement(\n        _LogMonitorButton2.default,\n        {\n          theme: theme,\n          onClick: this.handleSweep,\n          enabled: hasSkippedActions },\n        'Sweep'\n      ),\n      _react2.default.createElement(\n        _LogMonitorButton2.default,\n        {\n          theme: theme,\n          onClick: this.handleCommit,\n          enabled: hasStates },\n        'Commit'\n      )\n    );\n  };\n\n  return LogMonitorButtonBar;\n}(_react.Component);\n\nLogMonitorButtonBar.propTypes = {\n  dispatch: _propTypes2.default.func,\n  theme: _propTypes2.default.object\n};\nexports.default = LogMonitorButtonBar;"},"hash":"2ddb9e9cf01dab9b44b5e9ad13502a0d"}