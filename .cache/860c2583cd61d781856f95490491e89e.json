{"dependencies":[{"name":"superagent","loc":{"line":1,"column":23}},{"name":"./helper","loc":{"line":2,"column":31}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _superagent = require(\"superagent\");\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _helper = require(\"./helper\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst methods = ['get', 'post', 'put', 'patch', 'del'];\n\nfunction formatUrl(path, operateId) {\n  if (path && operateId) path = path.replace(/\\{[^\\}]+\\}/g, operateId);\n  if (/^https?:\\/\\//.test(path)) {\n    return path;\n  } else {\n    return path[0] !== '/' ? '/' + path : path;\n  }\n}\n\nlet request = {};\nmethods.forEach(method => {\n  request[method] = (path, {\n    operateId,\n    headers,\n    params,\n    data,\n    fields,\n    files,\n    query\n  } = {}) => new Promise((resolve, reject) => {\n    const _request = _superagent2.default[method](formatUrl(path, operateId));\n    if (headers) {\n      if (headers.Authorization) headers.Authorization = (0, _helper.getAuthorization)(headers.Authorization);\n      _request.set(Object.assign({\n        'content-type': 'application/json',\n        'accept': 'application/json'\n      }, headers || {}));\n    }\n    params = params || {};\n    if (query) {\n      params.q = JSON.stringify(query);\n    }\n    _request.query(params);\n\n    if (data) {\n      _request.send(data);\n    }\n\n    if (fields) {\n      Object.keys(fields).forEach(key => {\n        _request.field(key, fields[key]);\n      });\n    }\n\n    if (Array.isArray(files) && files.length > 0) {\n      files.forEach(file => {\n        _request.attach('file', file, file.name);\n      });\n    }\n\n    _request.end((err, {\n      body\n    } = {}) => err ? reject(body || err) : resolve(body));\n  });\n});\n\nexports.default = request;"},"hash":"8873ff592da69207b271dd3b3296694f"}