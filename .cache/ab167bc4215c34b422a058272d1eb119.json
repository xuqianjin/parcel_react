{"dependencies":[{"name":"redux","loc":{"line":1,"column":54}},{"name":"redux-thunk","loc":{"line":2,"column":18}},{"name":"./rootReducer","loc":{"line":25,"column":38}},{"name":"react-router-redux","loc":{"line":4,"column":33}},{"name":"redux-promise-middleware","loc":{"line":5,"column":30}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = configureStore;\n\nvar _redux = require(\"redux\");\n\nvar _reduxThunk = require(\"redux-thunk\");\n\nvar _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\nvar _rootReducer = require(\"./rootReducer\");\n\nvar _rootReducer2 = _interopRequireDefault(_rootReducer);\n\nvar _reactRouterRedux = require(\"react-router-redux\");\n\nvar _reduxPromiseMiddleware = require(\"redux-promise-middleware\");\n\nvar _reduxPromiseMiddleware2 = _interopRequireDefault(_reduxPromiseMiddleware);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction configureStore(initialState = {}) {\n  // Compose final middleware and use devtools in debug environment\n  let middleware = (0, _redux.applyMiddleware)(_reduxThunk2.default, (0, _reduxPromiseMiddleware2.default)({}));\n  // if (__DEV__) {\n  //   const devTools = window.devToolsExtension\n  //     ? window.devToolsExtension()\n  //     : require('containers/DevTools').default.instrument()\n  //   middleware = compose(middleware, devTools)\n  // }\n\n  // Create final store and subscribe router in debug env ie. for devtools\n  const store = middleware(_redux.createStore)(_rootReducer2.default, initialState);\n\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const nextRootReducer = require('./rootReducer').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}"},"hash":"604b85b30e8ac9b7d8e9fe1ee1e014ff"}