{"dependencies":[{"name":"react","loc":{"line":5,"column":21}},{"name":"prop-types","loc":{"line":9,"column":25}},{"name":"./LogMonitorEntry","loc":{"line":13,"column":31}},{"name":"react-pure-render/function","loc":{"line":17,"column":24}}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _LogMonitorEntry = require('./LogMonitorEntry');\n\nvar _LogMonitorEntry2 = _interopRequireDefault(_LogMonitorEntry);\n\nvar _function = require('react-pure-render/function');\n\nvar _function2 = _interopRequireDefault(_function);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LogMonitorEntryList = function (_Component) {\n  _inherits(LogMonitorEntryList, _Component);\n\n  function LogMonitorEntryList() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LogMonitorEntryList);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.shouldComponentUpdate = _function2.default, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LogMonitorEntryList.prototype.render = function render() {\n    var elements = [];\n    var _props = this.props;\n    var theme = _props.theme;\n    var actionsById = _props.actionsById;\n    var computedStates = _props.computedStates;\n    var currentStateIndex = _props.currentStateIndex;\n    var consecutiveToggleStartId = _props.consecutiveToggleStartId;\n    var select = _props.select;\n    var skippedActionIds = _props.skippedActionIds;\n    var stagedActionIds = _props.stagedActionIds;\n    var expandActionRoot = _props.expandActionRoot;\n    var expandStateRoot = _props.expandStateRoot;\n    var markStateDiff = _props.markStateDiff;\n    var onActionClick = _props.onActionClick;\n    var onActionShiftClick = _props.onActionShiftClick;\n\n\n    for (var i = 0; i < stagedActionIds.length; i++) {\n      var actionId = stagedActionIds[i];\n      var action = actionsById[actionId].action;\n      var _computedStates$i = computedStates[i];\n      var state = _computedStates$i.state;\n      var error = _computedStates$i.error;\n\n      var previousState = void 0;\n      if (i > 0) {\n        previousState = computedStates[i - 1].state;\n      }\n      elements.push(_react2.default.createElement(_LogMonitorEntry2.default, { key: actionId,\n        theme: theme,\n        select: select,\n        action: action,\n        actionId: actionId,\n        state: state,\n        previousState: previousState,\n        collapsed: skippedActionIds.indexOf(actionId) > -1,\n        inFuture: i > currentStateIndex,\n        selected: consecutiveToggleStartId === i,\n        error: error,\n        expandActionRoot: expandActionRoot,\n        expandStateRoot: expandStateRoot,\n        markStateDiff: markStateDiff,\n        onActionClick: onActionClick,\n        onActionShiftClick: onActionShiftClick }));\n    }\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      elements\n    );\n  };\n\n  return LogMonitorEntryList;\n}(_react.Component);\n\nLogMonitorEntryList.propTypes = {\n  actionsById: _propTypes2.default.object,\n  computedStates: _propTypes2.default.array,\n  stagedActionIds: _propTypes2.default.array,\n  skippedActionIds: _propTypes2.default.array,\n  currentStateIndex: _propTypes2.default.number,\n  consecutiveToggleStartId: _propTypes2.default.number,\n\n  select: _propTypes2.default.func.isRequired,\n  onActionClick: _propTypes2.default.func.isRequired,\n  theme: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),\n  expandActionRoot: _propTypes2.default.bool,\n  expandStateRoot: _propTypes2.default.bool\n};\nexports.default = LogMonitorEntryList;"},"hash":"62cbbf55169a21b1ddc940dba704894d"}